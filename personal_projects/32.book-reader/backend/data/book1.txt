"if you haven't noticed Ai and language models are changing the skills needed to be a successful engineer the people who are learning these new skills are getting jobs that pay up to $435,000 a year they're creating apps using language models that generate millions of dollars at 90% margins with no employees they're building features that took months in minutes and they're using AI engineering but there's a problem these new AI models are non-deterministic and English is now a programming language what and frankly the industry is still figuring out the best practices of using them however we're now entering a golden era for AI engineers and the ones that add to their skill sets will be ahead of the curve there are six new AI engineering skills that are actually solving these problems and in my opinion every engineer is going to need to learn them to be successful for those that are new to the channel my name is Greg I led a team of data scientists at Salesforce driving product analytics for billion dooll products I've taught over 10,000 velers how to build their first AI applications and now I'm in the absolutely privileged position to be making money doing what I love building and teaching with others this video is all about telling myself what I wish I would have known about working with llms and some of these areas I completely overlooked I'm going to outline the road map of skills that you need to be a successful AI engineer along the way I'm going to highlight specific jobs that these skills are required for I'll show you which experts are demonstrating these skills at a professional level and I'll give you a list of resources to help you go further and you invest in these skills you're going to go off and build way more than you ever thought that you could if you're remotely serious about getting into AI engineering then you're going to want to watch the full thing and by the way every link and mention in this video is going to be Consolidated into a one-pager if you want to get access to it links in the description the first stop on the road map of AI engineering is working with models now there's four popular models this is going to be open aai anthropic meta and Google and each one has their own personality check out how arjin Canan CEO of resides puts it we found that the open AI models tend to be the best analysts the uh anthropic models tend to be the best writers and the uh Gemini models broadly tend to be the best detectives if you want to think about it that way right like they're great at finding needles and hay stacks when looking at large contexts the important part to understand is that most usage is going to be from text to text however there is text to speech text to image video to image really any modality that you may want and this is the multimodal part of working with these models the next piece you're going to want to understand is how to work with these models apis now you're going to get very used to seeing open. chat completions doc create but then there's also a lot of different model types GPT 40 01 whisper Sona highq Opus there's really a ton to learn you're also going to want to understand streaming batch processing prompt caching and assistance now for each one of these on the document that I talked about beforehand we're going to have definitions and resources to go learn more about these next up is going to be local versus open source now if you don't trust open AI anthropic Google or meta well then you can go run your own model on your own infrastructure and popular examples for these are going to be with open router or o llama now this is up to you now in my opinion what you're not going to have to worry about yet is with regards to model training fine-tuning or model routing now all these are very important but I don't think that they're Mission critical for an AI engineer right when they're starting that's more of an optimization skill that they can learn later on down the road for resources if you want to learn more check out my pre previous AI show andt tell videos and we have different guests that talk about their experiences with working with models now another one I would highly suggest is the Lex Freedman podcast with the cursor team this is a bit more advanced look into Model Management but I thought it was really really good and for people who to follow I think Justine Tony is absolutely fabulous for this now heads up again once more this video is going to have a ton of links and resources it's too many to put in the description of this video so I have a dock for one of those and if you want that dock link is in the description for those next up on the road map becoming an AI engineer is understanding the art of prompting now I know a lot of people will argue with me and say prompting isn't serious or that it is a fad but the way that I see it is with prompting what you're really doing is just trying to elicit a behavior from a model now today that's English tomorrow it might be something else so let's not argue about the future but let's agree today that effective prompting or the art of eliciting the behavior from a model that you want is a skill that's needed now the art of prompting goes extremely deep as a practice so we won't go into all the details in this video but I'm going to share four techniques that have worked for me in the past now the first one that I love is Chain of Thought or think out loud this is going to be when you have the model explain its thought process first rather than have the model derive its answer early in its output next it's hard to get performance from a prompt if you don't include examples so make sure you include those and then of course there's a slew of other tricks like using XML tags or using pre-filled prompt messages if you want to find out what those are those are on the dock as well the next technique you're going to want to master is with structured outputs now it's interesting because computers do much better with structured data like Json or tables however language models they deal with plain text literally the output is a text that you have the normal output now when the model responds back to you with valid Json well then you can go and give that to other programs in your computers or you can start to use other tools outside of your language models and if you want your language models to use things like search queries or tools or integrate with other systems while structured outputs are going to be the way that you're going to do this now let's listen to what TBO says and he sold his business for $8 million now he's heavily involved with AI I think I think the the sentence that I tpe the most is output in jasm do not output anything else about it so it's basically structured outputs only that come out from it yeah and it's super reliable I'll put a link to how to deal structured outputs on the dock next up as an AI engineer you're going to come up to the question around how to do prompt management and one of my favorite people to follow in this case is Jared the CEO of prompt player he has a super cool perspective on this it's interesting to see that we kind of all go down the same path first we're going to put our prompts right in our code then we're going to have txt files then we're probably going to use an outside manager prompt manager like a prompt lier for resources we have a ton of these first I want you to check out this anthropic job and it's not current anymore but it was there that paid up to $375,000 a year for a prompt engineer or librarian h a prompt librarian okay next up we're also going to have a well-rounded introduction to optimize prompting and I highly suggest reading Eugene's post and for a huge Deep dive well Elvis is the master in this one he is the prompt engineering guide that I highly suggest going and checking out and not only that but we also have research directions as well so if you want to check out this paper that Google just came out with around prompting links in the dock as well the third skill on the AI engineering road map is around context or retrieval so far we've only been working with the model as is that is we've relied on the data that they model new at its time of training and this is okay for G reasoning but what about when you want to combine it with the context it knows about you or your users or maybe your role the popular term for this is retrieval as in hey we're going to go retrieve data and bring it back to our language model so it can generate a better response this is where the term retrieval augmented generation or rag comes in because you're doing generation with retrieval but don't be intimidated because this is literally just putting data in your prompt like you would for any other analysis I do this all the time when I cop copy and paste information about myself into chat GPT that's a really manual form of of retrieval but I'm still retrieving information about myself the common way to do this is with matching relevant documents based off of a user's query and what's amazing is that the most popular way to do this has been with embeddings and semantic search let's break both these down very quickly because they're super important so embeddings are a vector representation of a body of text if that sounds complicated it's actually pretty simple this is literally just a list of numbers of vector and we do this because computers can compare numbers a lot more easily than they can compare words so if we have two vectors together which represents two different pieces of text we can actually compare those and do similarity metrics between the two and then all of a sudden we can tell hey how semantically close are these two different pieces of text now the other key word here is semantic or semantic search and this means that you're going to be searching by the meaning of a word or phrase rather the than the exact keyword so all of a sudden ocean is semantically similar to water which is very cool right and you'll see that there are immediate problems with doing vanilla retrieval you'll find that users queries aren't really detailed enough or your app isn't returning the exact right context that you need to answer a question or perhaps maybe there's too much fluff in your prompts and this is where the world of advanced retrieval comes in and there's techniques like enhancing users query before it goes into your search or improving the raw data chunking strategies or improving how you split your long texts into smaller pieces which is really your index strategies for resources I have an entire series on retrieval called fullstack retrieval.com if you're interested to learn more you can go check that out there's also the Lang chain documentation which is a great place to get ramped up to Concepts also for those that are ready I've made a tool called chunk viz.com that actually helps you visualize different chunking techniques the next AI engineering skill that you're going to want to master is orchestration this is when you go just beyond a single API call to a model and you start creating systems that work together in concert now the base levels of this look like working with an orchestration framework something like Lang chain that's going to help you adopt the foundation orchestration patterns now at its simplest form this could just be chains right chains are just when you sequentially put different model calls together however the advanced version of this is when you start to dip into the world of Agents now agents may seem complicated and we're still arguing about what a the definition of an exact agent is however my definition is going to be similar to what Harrison Chase says the the core idea of Agents is using the language model as as a reasoning engine um so using it to determine kind of like what to do and how to interact with the outside world and and and this means that there is a non-deterministic kind of like sequence of actions that'll be taken depending on the user input in English agents are simply language models that have access to tools and can decide when a job is specifically done but I will say that the line is blurry for what is an agent what is not let's not argue about it there are jobs that will pay up to $435,000 a year year for people who specialize in agents now in the world of Agents the most popular Frameworks are going to be Lang graph crew Ai and Haystack or in the noode world you have things like Lindy doai or langlow or hoe. another key important part with working with agents is going to be around long-term memory now Lang chain has a really cool blog post on this entire thing however I will say we're all still trying to figure it out and I just posted a tweet that asked everybody what they thought about long-term memory and uh there's no there's no solidified answers for other resources I suggest checking out Lang change has put out a state of Agents report now this is around agent adoption within companies so if you're looking to build a company it would be pretty helpful to know what the adoption patterns currently are this one's very very cool the people I suggest to follow in this world are going to be Harrison and Alex and by the way if you want to learn more about building simple agents on top of unstructured data this is where my cohort comes in next up on the AI engineering road map and this is arguably most important of all is evaluations and observability one of my favorite lines about evaluations comes from Jason if you don't have evals then you don't have a serious app evals are the unit tests of your language model applications now in regular code it's easy to see if things break but what about when your output is non-deterministic and really Vibe based like language models are well this is where evals comes in people will stay away from evals well because look how people stay away from regular unit testing in their code anyway but really also because it's hard it's hard when you want to thoroughly evaluate how good a summary is or how good a natural language output is these things are difficult but there's evolving best practices one of the best resources I know about this is going to be Hamill he's one of the leading voices on evals and has a great resource to go learn more now on the observability side this really breaks down into two different pieces the first one is tracing now tracing is when you literally just start to log the different language model calls you have so you can easily debug for them now it's extremely difficult to dig into why your application performance has degraded if you can't find or see which llm calls you're doing the best way I've seen to do tracing is just hook into an additional framework something like Langs Smith or another observability platform make sure to add a bunch of metadata to your calls so you can easily pinpoint and D duplicate which calls you're actually making on the other side you're going to want to do cost management now if you're not tracking your costs then you're going to be in for a bad time observability tools help you track every single llm call and the latency errors as well for resources my go-to observability tool is lsmith they have a free tier which is super easy to get set up with and it's a really easy interface for other tools check out gen trace and arise for product teams I suggest checking out Auto blocks and free play the final skill that is needed to be an AI engineer is going to be the mindset now I bluffed a little bit because this is really a meta skill but it's really important to have a new mindset as you're starting to build with AI now hey llms give us a new capability to work with and when you have new capabilities you have new use cases and what are these things even good for check out this sample of use cases that Elvis talked about SAR of Hampton he put out an AI report about how all his companies are using AI which is super interesting and then I also put together in early signals the next mindset pillar I want you to adopt is the build first and build quickly mindset so check out what TBO says about building quick I I would try to like get the first ID that to have and start working on it right away and try to ship something uh to the public as soon as possible and I would I would treat about that even if it's black even if it's shitty and even if it's not not that useful I would just tweet about it and expect a few of my friends to test it and give me feedback the friction is so low that execution is more important than ever the next skill is around understanding the emerging new tool stack now I'm sure you've heard of a few of these and they could take up an entire video each but if you're building front ends it's too cheap not to work with something like v0 to get inspiration from then there's cursor and wind surf for if you're looking for a new AI powered IDE and then not only that anthropics projects is very popular amongst the developers see what Nicole Headley CEO of Head Start has to say about anthropic projects we're just top users of CLA and CLA projects uh we love it I think it's the greatest thing that has ever been developed if he took it away from me I would really struggle to run my business which is probably like the highest NPS you can get for a product the next mindset pillar is around scaling llm apps now I got to attend open a eyes Dev day and I heard an amazing talk by Colin and Jeff of open AI in it they highlight three key areas of scaling LL Maps improving performance reducing cost and reducing latency and by the way I packaged up all these links and resources in a single blog post completely free link for that is in the description if you want it now if you've gotten this far in the video there's a good chance that you're on your way to becoming an AI engineer and I want to keep pointing you in the right direction and this is only the beginning the fact is is that the landscape is changing so much which really that should encourage you because there's never been a better time to build or be a builder who's actually executing now I'm going to be stepping a few students through these best practices Hands-On through a course called building with aims AI engineering patterns for Scrappy developers the whole point of this is I want you to ship an app using these exact six skills you're going to learn new tools along the way and you're going to be surrounded by a cohort of Builders we're also going to have guest speakers from industry who are going to come in and chat with us about this not only that but then we're also going to have ai credits so you're going to get a speed boost to building with some of these tools in general the cohort will be running ongoing if you want to get more information about that link is in the description and the doc as well"